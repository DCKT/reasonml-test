// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Js_exn                  = require("bs-platform/lib/js/js_exn.js");
var Random                  = require("bs-platform/lib/js/random.js");
var Readline                = require("readline");
var Caml_format             = require("bs-platform/lib/js/caml_format.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

var $$process = ( process );

var Readline$1 = /* module */[];

var Node = /* module */[
  /* process */$$process,
  /* Readline */Readline$1
];

Random.self_init(/* () */0);

var numberFound = [/* false */0];

var mysteryNumber = Random.$$int(10);

var rl = Readline.createInterface({
      input: $$process.stdin,
      output: $$process.stdout
    });

function handleString(text) {
  var exit = 0;
  var $$int;
  try {
    $$int = Caml_format.caml_int_of_string(text);
    exit = 1;
  }
  catch (raw_exn){
    var exn = Js_exn.internalToOCamlException(raw_exn);
    if (exn[0] === Caml_builtin_exceptions.failure) {
      if (exn[1] === "int_of_string") {
        console.log("This is not a number");
        return /* () */0;
      } else {
        throw exn;
      }
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    if ($$int > mysteryNumber) {
      console.log("It's less !");
      return /* () */0;
    } else if ($$int < mysteryNumber) {
      console.log("It's more !");
      return /* () */0;
    } else {
      console.log("Congrats !");
      return /* () */0;
    }
  }
  
}

function play() {
  return rl.question("Found the mystery number [0-10] : ", (function (answer) {
                if (answer) {
                  return handleString(answer[0]);
                } else {
                  console.log("You must write value");
                  return /* () */0;
                }
              }));
}

play(/* () */0);

exports.Node          = Node;
exports.numberFound   = numberFound;
exports.mysteryNumber = mysteryNumber;
exports.rl            = rl;
exports.handleString  = handleString;
exports.play          = play;
/* process Not a pure module */
